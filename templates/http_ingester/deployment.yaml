{{- range $module, $config := .Values.ingesters }}
---
{{ if $config.ingester_app }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-ingester-{{ $module }}
  labels:
    app.kubernetes.io/componentgroup: ingesters
    app.kubernetes.io/component: ingester-{{ $module }}
    {{- include "daq-dranspose.labels" $ | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ingester-{{ $module }}
      app.kubernetes.io/componentgroup: ingesters
      {{- include "daq-dranspose.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: ingester-{{ $module }}
        app.kubernetes.io/componentgroup: ingesters
        {{- include "daq-dranspose.selectorLabels" $ | nindent 8 }}
    spec:
      securityContext:
        sysctls:
          - name: net.ipv4.tcp_wmem
            value: "4096 87380 16777216"
          - name: net.netfilter.nf_conntrack_tcp_timeout_close_wait
            value: "3600"
      containers:
      - name: {{ $.Chart.Name }}-ingester-{{ $module }}
        image: "harbor.maxiv.lu.se/daq/dranspose:main"
        command: ["dranspose"]
        args:
          - "http_ingester"
          - "--name"
          - "{{ $config.stream | default $module }}"
          - "-c"
          - {{ $config.ingester_app | default "dranspose.ingesters.http_sardana:app" | quote }}
        env:
          - name: BEAMLINE
            value: {{ $.Values.global.beamline | quote }}
          {{ if $.Values.global.dump_prefix }}
          - name: DUMP_PATH
            value: "{{ $.Values.global.dump_prefix }}{{ $module }}.pkls"
          {{ end }}
{{ include "daq-dranspose.extraEnv" $ | indent 10 }}
        imagePullPolicy: Always
        ports:
          - name: control
            containerPort: 5000
            protocol: TCP
          - name: workers
            containerPort: 10010
            protocol: TCP
      {{ if $.Values.global.dump_prefix }}
        volumeMounts:
          - name: daq-volume-staff
            mountPath: {{ printf "/data/staff/%s" $.Values.global.beamline }}
            readOnly: false
      volumes:
      - name: daq-volume-staff
        hostPath:
          path: {{ printf "/gpfs/offline1/staff/%s" $.Values.global.beamline }}
          type: Directory
      {{ end}}
{{end}}
{{end}}